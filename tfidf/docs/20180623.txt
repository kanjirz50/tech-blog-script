系列ラベリングの素性抽出

系列ラベリング問題を取り扱う際の素性抽出が、いつも複雑になりがちなので、テンプレートを書いてサクッと抽出できるよう整理しました。

どんな素性を抽出したいか
固有表現抽出を例にあげます。

以下の表は、「午前８時に東京駅で集合する。」という文を形態素解析し、IOB2(Inside-outside-beggining)タグ形式で固有表現のラベルを付与したものです。

「午前８時」はTIME属性、「東京駅」はLOCATION属性を持つことになります。

ここで、「東京」という単語を例に素性抽出します。

素性には、対象単語と前後２単語の表層形、対象単語と前後２単語の品詞、推定済みの前2単語のIOB2タグを利用するとします。 あるラベルを学習する際の素性は、Pythonの辞書形式で表すと以下のようになります。

これを簡単に抽出できるように、テンプレート作ります。

テンプレートを使って素性抽出
テンプレートは、「ラベル名、素性抽出のための関数、対象単語からの相対的な位置」を持ちます。 素性抽出のための関数は、対象の素性を抽出するための関数で、例えば小文字かどうかを素性に含めたい場合は lambda x: x.surface.islower() のような処理を記述します。 例では、あるトークンのインスタンス変数としてsurfaceを持っているため、x.surfaceでアクセスしていますが、x['surface']のように与えるトークンの形式により異なります。

テンプレートを適用し素性抽出を行うメソッドを書きます。

たとえば、scikit-learnを利用する場合は、辞書形式で抽出された素性を、DictVectorizerでベクトル化することで、利用可能となります。

同じテンプレートで推定を行う
実際の推定時には、以下のように先頭から順に推定し、推定したタグを代入していくことで、次のタグの素性抽出時に推定した前のタグが利用可能になります。
